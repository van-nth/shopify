{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

{% if section.settings.image_shape == 'blob' %}
  {{ 'mask-blobs.css' | asset_url | stylesheet_tag }}
{%- endif -%}

{%- if section.settings.enable_quick_add -%}
  {{ 'quick-add.css' | asset_url | stylesheet_tag }}
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- style -%}
  :root {
    --red-color: #eb5e43;
  }
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }

    .custom-product-grid .facets-vertical {
      display: grid;
      grid-template: auto 1fr / auto auto;
      position: relative;
    }

    .custom-product-grid .facets-vertical aside {
      grid-row: span 2;
    }
  }

  .custom-product-grid .facets-vertical-sort .facets-vertical-form {
    align-items: center;
  }

  .custom-product-grid .utils-viewtoggle-button {
    border: none;
    background: transparent;
    cursor: pointer;
  }

  .custom-product-grid .utils-viewtoggle-button svg {
    color: rgba(var(--color-foreground), 0.6);
  }

  .custom-product-grid .utils-viewtoggle-button.active svg {
    color: var(--red-color);
  }

  .custom-product-grid .product-grid-container.view-as-list ul.grid {
    display: grid;
    grid-template-columns: 1fr;
    row-gap: 2rem;
    width: 100%;
  }

  .custom-product-grid .product-grid-container.view-as-list li.grid__item {
    max-width: 100%;
    width: 100%;
  }

  .custom-product-grid .product-grid-container.view-as-list .card-wrapper {
    border: 1px solid #ccc;
  }

  .custom-product-grid .product-grid-container.view-as-list li.grid__item .card {
    display: grid;
    grid-template-columns: 30% 1fr;
    gap: 2rem;
    box-shadow: unset;
    background-color: #fff;
  }

  .custom-product-grid .product-grid-container.view-as-list li.grid__item .card .card__content {
    display: grid;
    padding: 1.5rem 2rem;
    grid-template-columns: 1fr;
  }

  .custom-product-grid .product-grid-container.view-as-list li.grid__item .card .card__inner {
    border: none;
  }

  .custom-product-grid .product-grid-container .card__description {
    display: none;
  }

  .custom-product-grid .card .price {
    color: var(--red-color);
    font-size: 1.8rem;
  }

  .custom-product-grid .product-grid-container .card__information .card__heading {
    font-family: 'sofia-pro', sans-serif !important;
    font-size: var(--font-heading-scale);
  }

  .custom-product-grid .utils-viewtoggle-label {
    display: none;
  }

  .custom-product-grid a.active-facets__button-remove {
    color: var(--red-color);
  }

  .custom-product-grid .facets-vertical .vertical-utils-container {
    display: flex;
    justify-content: space-between;
  }

  .custom-product-grid .facets-vertical .product-grid-container {
    grid-column: 2;
  }

  .custom-product-grid .facets-container .product-count {
    display: none;
  }

  .custom-product-grid .product-grid-container .utils-mobile-hide {
    display: none;
  }

  .custom-product-grid .utils-viewtoggle {
    display: flex;
    align-items: center;
    gap: 1rem;
    justify-content: flex-end;
  }

  .custom-product-grid .vertical-utils-container {
    padding-top: 1rem;
  }

  .mobile-facets__open svg,
  .mobile-facets__open-label {
    color: var(--red-color);
  }

  .custom-product-grid .custom-facets-horizontal {
    display: grid;
    grid-template-columns: 1fr 1fr;
    position: relative;
  }

  .custom-product-grid .custom-facets-horizontal {
    display: grid;
    grid-template-columns: 1fr auto;
  }

  .custom-product-grid .custom-facets-horizontal .product-grid-container {
    grid-column: span 2;
  }

  .custom-product-grid aside {
    width: 100%;
  }
{%- endstyle -%}

<div
  id="custom-product-grid--{{ section.id }}"
  class="page-width custom-product-grid custom-product-grid--{{ section.id }} section-{{ section.id }}-padding"
>
  {%- paginate collection.products by section.settings.products_per_page -%}
    {% comment %} Sort is the first tabbable element when filter type is vertical {% endcomment %}
    <div class="{% if section.settings.filter_type == 'vertical' %}facets-vertical page-width{% else %}custom-facets-horizontal{% endif %}">
      {{ 'component-facets.css' | asset_url | stylesheet_tag }}
      <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
      {%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
        <aside
          aria-labelledby="verticalTitle"
          class="facets-wrapper{% unless section.settings.enable_filtering %} facets-wrapper--no-filters{% endunless %}{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}"
          id="main-collection-filters"
          data-id="{{ section.id }}"
        >
          {% render 'facets',
            results: collection,
            enable_filtering: section.settings.enable_filtering,
            enable_sorting: section.settings.enable_sorting,
            filter_type: section.settings.filter_type,
            paginate: paginate
          %}
        </aside>
      {%- endif -%}
      {%- if section.settings.show_view_toggle -%}
        <div class="vertical-utils-container">
          {%- if section.settings.enable_sorting and section.settings.filter_type == 'vertical' -%}
            <facet-filters-form class="facets facets-vertical-sort small-hide no-js-hidden">
              <form class="facets-vertical-form" id="FacetSortForm">
                <div class="facet-filters sorting caption">
                  <div class="facet-filters__field">
                    <h2 class="facet-filters__label caption-large text-body">
                      <label for="SortBy">{{ 'products.facets.sort_by_label' | t }}</label>
                    </h2>
                    <div class="select">
                      {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
                      <select
                        name="sort_by"
                        class="facet-filters__sort select__select caption-large"
                        id="SortBy"
                        aria-describedby="a11y-refresh-page-message"
                      >
                        {%- for option in collection.sort_options -%}
                          <option
                            value="{{ option.value | escape }}"
                            {% if option.value == sort_by %}
                              selected="selected"
                            {% endif %}
                          >
                            {{ option.name | escape }}
                          </option>
                        {%- endfor -%}
                      </select>
                      {% render 'icon-caret' %}
                    </div>
                  </div>
                  <noscript>
                    <button type="submit" class="facets__button-no-js button button--secondary">
                      {{ 'products.facets.sort_button' | t }}
                    </button>
                  </noscript>
                </div>

                {%- if section.settings.show_product_count -%}
                  <div class="product-count-vertical light" role="status">
                    <h2 class="product-count__text text-body">
                      <span id="ProductCountDesktop">
                        {%- if collection.results_count -%}
                          {{
                            'templates.search.results_with_count'
                            | t: terms: collection.terms, count: collection.results_count
                          }}
                        {%- elsif collection.products_count == collection.all_products_count -%}
                          {{ 'products.facets.product_count_simple' | t: count: collection.products_count }}
                        {%- else -%}
                          {{
                            'products.facets.product_count'
                            | t: product_count: collection.products_count, count: collection.all_products_count
                          }}
                        {%- endif -%}
                      </span>
                    </h2>
                    <div class="loading-overlay__spinner">
                      <svg
                        aria-hidden="true"
                        focusable="false"
                        class="spinner"
                        viewBox="0 0 66 66"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                      </svg>
                    </div>
                  </div>
                {%- endif -%}
              </form>
            </facet-filters-form>
          {%- endif -%}
          <div class="utils-viewtoggle">
            <span class="utils-viewtoggle-label">View as</span>
            <button
              class="utils-viewtoggle-button grid-view-btn"
              data-collection-view="grid-view"
              aria-label="grid view"
            >
              {%- render 'icon-grid-view' -%}
            </button>
            <button
              class="utils-viewtoggle-button list-view-btn"
              data-collection-view="list-view"
              aria-label="list view"
            >
              {%- render 'icon-list-view' -%}
            </button>
          </div>
        </div>
      {%- endif -%}

      <div
        class="product-grid-container{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
        id="ProductGridContainer"
        {% if settings.animations_reveal_on_scroll %}
          data-cascade
        {% endif %}
      >
        {%- if collection.products.size == 0 -%}
          <div class="collection collection--empty page-width" id="product-grid" data-id="{{ section.id }}">
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <h2 class="title title--primary">
                {{ 'sections.collection_template.empty' | t -}}
                <br>
                {{
                  'sections.collection_template.use_fewer_filters_html'
                  | t: link: collection.url, class: 'underlined-link link'
                }}
              </h2>
            </div>
          </div>
        {%- else -%}
          <div class="collection{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}">
            <div class="loading-overlay gradient"></div>

            <ul
              id="product-grid"
              data-id="{{ section.id }}"
              class="
                grid product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down
                grid--{{ section.settings.columns_desktop }}-col-desktop
              "
            >
              {%- for product in collection.products -%}
                {% assign lazy_load = false %}
                {%- if forloop.index > 2 -%}
                  {%- assign lazy_load = true -%}
                {%- endif -%}
                <li
                  class="grid__item{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                  {% if settings.animations_reveal_on_scroll %}
                    data-cascade
                    style="--animation-order: {{ forloop.index }};"
                  {% endif %}
                >
                  {% render 'card-product',
                    card_product: product,
                    media_aspect_ratio: section.settings.image_ratio,
                    image_shape: section.settings.image_shape,
                    show_secondary_image: section.settings.show_secondary_image,
                    show_vendor: section.settings.show_vendor,
                    show_product_description: section.settings.show_product_description,
                    show_rating: section.settings.show_rating,
                    lazy_load: lazy_load,
                    show_quick_add: section.settings.enable_quick_add,
                    section_id: section.id
                  %}
                </li>
              {%- endfor -%}
            </ul>

            {%- if paginate.pages > 1 -%}
              {% render 'pagination', paginate: paginate, anchor: '' %}
            {%- endif -%}
          </div>
        {%- endif -%}
      </div>
    </div>
  {%- endpaginate -%}
  {% if section.settings.image_shape == 'arch' %}
    {% render 'mask-arch' %}
  {%- endif -%}
</div>

{% javascript %}
  document.addEventListener('DOMContentLoaded', () => {
    const viewButtons = document.querySelectorAll('.utils-viewtoggle-button');
    viewButtons.forEach((button, index) => {
      button.addEventListener('click', (e) => {
        localStorage.setItem('custom-grid', index);

        e.preventDefault();

        viewButtons.forEach((button) => button.classList.remove('active'));

        const productGrid = document.querySelector('#ProductGridContainer');
        if (button.classList.contains('grid-view-btn')) {
          productGrid.classList.remove('view-as-list');
          productGrid.classList.add('view-as-grid');
          button.classList.add('active');
        } else if (button.classList.contains('list-view-btn')) {
          productGrid.classList.remove('view-as-grid');
          productGrid.classList.add('view-as-list');
          button.classList.add('active');
        }
      });
    });
    const productGridIndex = localStorage.getItem('custom-grid') || 0;
    if (viewButtons && viewButtons[productGridIndex]) {
      viewButtons[productGridIndex].click();
    }
  });
{% endjavascript %}

{% schema %}
{
  "name": "Product Grid List View",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 24,
      "max": 48,
      "step": 12,
      "default": 24,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "checkbox",
      "id": "show_product_count",
      "default": false,
      "label": "Show Product Count"
    },
    {
      "type": "checkbox",
      "id": "show_view_toggle",
      "default": true,
      "label": "Show grid/list view toggle"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "select",
      "id": "image_shape",
      "options": [
        {
          "value": "default",
          "label": "t:sections.all.image_shape.options__1.label"
        },
        {
          "value": "arch",
          "label": "t:sections.all.image_shape.options__2.label"
        },
        {
          "value": "blob",
          "label": "t:sections.all.image_shape.options__3.label"
        },
        {
          "value": "chevronleft",
          "label": "t:sections.all.image_shape.options__4.label"
        },
        {
          "value": "chevronright",
          "label": "t:sections.all.image_shape.options__5.label"
        },
        {
          "value": "diamond",
          "label": "t:sections.all.image_shape.options__6.label"
        },
        {
          "value": "parallelogram",
          "label": "t:sections.all.image_shape.options__7.label"
        },
        {
          "value": "round",
          "label": "t:sections.all.image_shape.options__8.label"
        }
      ],
      "default": "default",
      "label": "t:sections.all.image_shape.label",
      "info": "t:sections.all.image_shape.info"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_product_description",
      "default": true,
      "label": "Show Product Description"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "checkbox",
      "id": "enable_quick_add",
      "default": false,
      "label": "Enable quick add"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "enabled_on": {
    "templates": ["collection"]
  },
  "presets": [
    {
      "name": "Product Grid List View"
    }
  ]
}
{% endschema %}
